# HAPROXY
kafka_2.13-3.4.0

## 1. Download and Install

### 1.1 apache

    wget https://archive.apache.org/dist/kafka/3.4.0/kafka_2.13-3.4.0.tgz


## 2. Considerations 

### 2.1 apache호환성 확인 

- 새로운 카프카 버전을 배포하기 전에 해당 버전과 클라이언트, 프로듀서, 컨슈머 라이브러리 등과의 호환성을 확인 필요함. 
카프카와 관련된 모든 응용 프로그램과 라이브러리가 새 버전과 호환되는지 확인해야함.


### 2.2 테스트 환경

- 카프카의 업데이트는 테스트 환경에서 충분히 검증되어야 함. 
새 버전을 테스트 환경에서 실행 후 응용 프로그램의 동작, 성능, 안정성 등 확인. 이는 예상치 못한 문제를 사전에 파악하고 대응할 수 있는 기회 제공.


### 2.3 백업

- 카프카의 업데이트를 진행하기 전에 데이터 백업을 수행 필요. 
카프카 데이터 디렉토리와 필요한 설정 파일 등을 백업하여 업데이트 중에 데이터 손실이나 문제가 발생할 경우 복원 필요.

 

### 2.4 문서 및 지원 자료 확인

- 카프카 업데이트와 관련된 문서, 릴리스 노트, 지원 자료 등을 검토. 업데이트 절차, 변경 사항, 주요 문제 등에 대한 정보를 확인하여 문제가 발생할 경우 대응.

 

### 2.5 롤백 계획

- 업데이트 중에 예상치 못한 문제가 발생할 경우를 대비하여 롤백 계획 수립

 

 

 

## 3. Update Plan 
롤링 업데이트
### 3.1 기존의 카프카 디렉토리 이름 변경
- 경로 충돌을 피하기 위해 기존의 카프카 디렉토리 이름을 변경하는 단계입니다. mv 명령어를 사용하여 디렉토리 이름을 변경할 수 있습니다.

### 3.2 새로운 버전의 카프카 설치
- 새로운 버전의 카프카를 설치하는 단계입니다. 이 단계에서는 새로운 버전의 카프카를 다운로드하여 설치합니다.

### 3.3 기존의 카프카 실행 중지

### 3.4 새로운 버전의 카프카 server.properties 설정
- inter.broker.protocol.version, log.message.format.version 설정 추가(클러스터의 성능, 문제 파악 후 오류 발생 시 다운그레이드를 위해 기존의 버전 설정 유지)

### 3.5 새로운 버전의 카프카 실행
- 실행 후 클러스터 안정화 확인

### 3.6 inter.broker.protocol.version 설정 최신화
- 동기화 완료 후 inter.broker.protocol.version을 최신 버전으로 변경 후 재실행하여 동기화, 안정성 확인

### 3.7 log.message.format.version 설정 변경
- 동기화, 안정성 확인 후 같은 방식으로 log.message.format.version 설정 후 재실행 

### 3.8 브로커 재시작
- 모든 브로커에 대해 위의 절차를 반복하여 업데이트를 완료합니다.

 

 

## 4. scenario
 

### 4.1 Kafka 업데이트 버전 설치
kafka broker 접속 후 새로운 버전(kafka_2.13-3.4.0) 압축 해제 후 설치
설치 명령어 : wget https://archive.apache.org/dist/kafka/3.4.0/kafka_2.13-3.4.0.tgz
만약 기존 카프카의 이름이 ex)kafka_2.12-2.2.0이 아닌 kafka 이런식이라면 새로 설치될 카프카와 헷갈릴 수 있기 때문에 kafka를 kafka_2.12-2.2.0으로 다시 변경해주자(4번 참고)
새로운 kafka 버전의 /home/sysadmin/kafka/config/server.properties 설정 추가 및 수정
inter.broker.protocol.version= 현재 카프카 버전 명시(예:3.4 , 3.0)(기존 사용 중이던 버전)
log.message.format.version = 현재 카프카 버전 명시(예:3.4 , 3.0)(기존 사용 중이던 버전)
2023/7 당시 2.2 명시 -> 3.4 업그레이드
기존의 카프카 server.properties와 비교하여 설정 비교하며 변경
또한, log4j.properties 설정도 기존 것과 비교하여 변경
기존의 kafka 실행 종료 - cd/home/sysadmin/kafka_2.12-2.2.0/bin/kafka-server-stop.sh
새로운 버전의 카프카 실행(이 단계에서 모든 브로커는 최신 바이너리를 실행하지만 실제 운용버전은 legacy버전으로 실행됨)
실행 시 설정사항은 아래 4번(JMX port 설정)을 참고하여 진행하길 바람.
동기화 완료 후 모든 broker 같은 방식으로 진행(모든 브로커를 최신 바이너리로 실행하고 운용버전을 legacy 버전으로 바꾼 후에(동기화 확인 필수) kafka버전을 차례차례 바꿔주면 된다.)


### 4.2 Kafka 버전 변경
새로운 버전으로 실행하였지만 실제 운영되는 버전은 기존의 버전이기 때문에 동기화를 완료한 후에 새로운 버전의 kafka로 치환
새로운 kafka 버전의 config/server.properties 수정
inter.broker.protocol.version= 설치한 새로운 카프카 버전 명시
다운그레이드를 할 경우를 생각하여 log.message.format.version 는 현재 단계 그대로 유지
최신 바이너리로 카프카 실행 후 다른 브로커와 동기화 진행
동기화 완료 후 모든 broker 같은 방식으로 진행

### 4.3 Kafka 메세지 포맷 변경
2번과 같은 방식으로 진행하며 config/server.properties 안의 log.message.format.version 최신 버전으로 변경 후 재실행

### 4.4 JMX Port 설정
업데이트 후 실행하면 JMX port가 -1로 되어있을텐데 JMX 포트가 -1로 표시되는 경우는 Kafka 브로커가 JMX 연결을 수락하지 않는 상태를 의미함. JMX 포트가 -1로 설정되면 JMX가 비활성화되어 있음을 나타낸다.
JMX_RMI_PORT =
JMX_PORT = 
KAFKA_JMX_OPTS = 
port=$JMX_RMI_PORT"
export KAFKA_HOME KAFKA_PARAM KAFKA_HEAP_OPTS JMX_RMI_PORT JMX_PORT KAFKA_JMX_OPTS 이런식으로 export를 해주고 startup을 진행한다.


## 5. Monitoring
클러스터 상태 모니터링
업데이트 진행 중 Kafka Manager를 통해 Broker, Topic, Partition 등의 상태를 확인하고, Topic의 Under Replicated %, Brokers Leader Skew % 를 확인하여 동기화가 제대로 진행이 되었는지 확인해야한다.
### 5.1 Under Replicated %
파티션 복제의 상태를 나타내는 용어
아직 복제가 완료되지 않은 파티션의 비율을 나타내는 지표임. 따라서 0%는 모든 파티션의 복제가 완료되었음을 의미한다.
### 5.2 Brokers Leader Skew %
카프카 클러스터에서 각 브로커가 리더로서 맡은 파티션의 분산 정도를 나타내는 지표
0%: 모든 브로커가 리더 파티션을 동등하게 분담하고 있음을 나타낸다. 리더 파티션들이 균형있게 분산되어 있으며, 클러스터의 리더 파티션 부하가 고르게 분배되어 있다.
100%: 특정 브로커가 대부분의 리더 파티션을 맡고 있음을 나타낸다. 이는 리더 파티션들이 불균형하게 분산되어 있고, 해당 브로커가 다른 브로커들보다 부하가 높은 상태를 의미할 수 있습니다. 이는 클러스터의 성능 저하와 부하 불균형을 야기할 수 있음.
 

 

## 6. Caution
 

### 6.1 항상 재실행 전에는 동기화 여부 확인 후 진행
 

### 6.2 kafka 실행 중 비정상적인 종료 시 생기는 오류
#### 6.2.1 Failed to acquire lock on file .lock in /home/sysadmin/kafka-data/kafka-logs. 
해당 디렉토리 경로에 lock 파일이 생성되어 제거 후 재시작을 진행해야한다.

제거 명령어
rm /home/sysadmin/kafka-data/kafka-logs/.lock 로 lock 파일 제거

제거 전 lock 파일 확인 필수!

 

### 6.2.2  org.apache.kafka.common.KafkaException: Socket server failed to bind to IPaddress:9092: 주소가 이미 사용 중입니다. 

- `lsof -i :9092`: 9092 포트를 사용하는 프로세스를 찾는다.

- 찾은 프로세스의 PID를 사용하여 해당 프로세스를 종료. 예를 들어, `kill <프로세스ID>`를 사용.

